process.stdin.resume();
process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();    
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

function setCharAt(str,index,chr) {
    if(index > str.length-1) return str;
    return str.substr(0,index) + chr + str.substr(index+1);
}
/////////////// ignore above this line ////////////////////

function triggerNeighbour(map, rows, columns, i, j){
    map[i][j] = ' ';    
    if(i-1 >= 0 && map[i-1][j] == '.'){
        map[i-1][j] = ' ';        
    }
    
    if(j-1 >= 0 && map[i][j-1] == '.'){
        map[i][j-1] = ' ';        
    }
    
    if(i+1 < rows && map[i+1][j] == '.'){
        map[i+1][j] = ' ';        
    }
    
    if(j+1 < columns && map[i][j+1] == '.'){
        map[i][j+1] = ' ';        
    }
}

function trigger(map, rows, columns){
    for(var i = 0; i < rows; i++){
        for(var j = 0; j < columns; j++){
            if(map[i][j] == 'O'){
                triggerNeighbour(map, rows, columns, i, j);
            }   
        }
    }
    
    //display(map,true);
    for(i = 0; i < rows; i++){
        for(j = 0; j < columns; j++){
            if(map[i][j] == ' '){
                map[i][j] = '.';
            } else{
                map[i][j] = 'O';
            }
        }
    }
}

function display(map, withBorders){
    if(withBorders){
        console.log("----------------------");
    }
    
    for(r = 0; r < map.length; r++){
        console.log(map[r].join(''));
    }
    
    if(withBorders){
        console.log("----------------------");
    }
}

function main() {
    var array = readLine().split(' ');
    array = array.map(Number);
    var map = [];
    var fullstring = Array(array[1]+1).join("O");
    for(var i =0 ; i<array[0]; i++){
        map.push(readLine().split(''));
    } 
    
    if(array[2] == 1){
        display(map);
        return;
    }

    if(array[2] % 2 == 0){
        for(var r = 0; r < array[0]; r++){
            console.log(fullstring);
        }
        return;
    }  
    
    trigger(map, array[0], array[1]); 
    if(array[2] % 4 == 3){
        display(map);
        return;
    }    

    trigger(map, array[0], array[1]); 
    display(map);
}
